{"version":3,"sources":["../../src/pages/item-create/item-create.module.ts","../../src/pages/item-create/item-create.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACa;AACN;AAED;AAc/C;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QAZhC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAc;aACf;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,oEAAc,CAAC;gBACxC,4EAAe,CAAC,QAAQ,EAAE;aAC3B;YACD,OAAO,EAAE;gBACP,oEAAc;aACf;SACF,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;AClBoB;AACe;AACtB;AACgB;AAO9D;IASE,wBAAmB,OAAsB,EAAS,QAAwB,EAAE,WAAwB,EAAS,MAAc;QAA3H,iBAWC;QAXkB,YAAO,GAAP,OAAO,CAAe;QAAS,aAAQ,GAAR,QAAQ,CAAgB;QAAmC,WAAM,GAAN,MAAM,CAAQ;QACzH,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC;YAC5B,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,IAAI,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,CAAC;SACZ,CAAC,CAAC;QAEH,kCAAkC;QAClC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,CAAC;YACjC,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAc,GAAd;IAEA,CAAC;IAED,sCAAa,GAAb;QACE,+BAA+B;QAC/B,sBAAsB;QACtB,oCAAoC;QACpC,8BAA8B;QAC9B,kCAAkC;QAClC,mCAAmC;QACnC,SAAS;QACT,uBAAuB;QACvB,kCAAkC;QAClC,kCAAkC;QAClC,gCAAgC;QAChC,SAAS;QACT,sBAAsB;QACtB,iCAAiC;QACjC,kCAAkC;QAClC,+CAA+C;QAC/C,+CAA+C;QAC/C,sCAAsC;QACtC,SAAS;QACT,wBAAwB;QACxB,wCAAwC;QACxC,iFAAiF;QACjF,sBAAsB;QACtB,qCAAqC;QACrC,kDAAkD;QAClD,EAAE;QACF,oDAAoD;QACpD,mEAAmE;QACnE,+DAA+D;QAC/D,kHAAkH;QAClH,QAAQ;QACR,QAAQ;IACR,CAAC;IACH;;OAEG;IACH,+BAAM,GAAN;QACE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAED;;;OAGG;IACH,6BAAI,GAAJ;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC;QAAC,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IAzEuB;QAAvB,yEAAS,CAAC,WAAW,CAAC;;qDAAW;IADvB,cAAc;QAJ1B,wEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;WACG;SAChC,CAAC;uBAU2H;OAThH,cAAc,CA2E1B;IAAD,CAAC;AAAA;SA3EY,cAAc,gB","file":"13.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { ItemCreatePage } from './item-create';\n\n@NgModule({\n  declarations: [\n    ItemCreatePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ItemCreatePage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    ItemCreatePage\n  ]\n})\nexport class ItemCreatePageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/item-create/item-create.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Camera } from '@ionic-native/camera';\nimport { IonicPage, NavController, ViewController } from 'ionic-angular';\n\n@IonicPage()\n@Component({\n  selector: 'page-item-create',\n  templateUrl: 'item-create.html'\n})\nexport class ItemCreatePage {\n  @ViewChild('fileInput') fileInput;\n\n  isReadyToSave: boolean;\n\n  item: any;\n\n  form: FormGroup;\n\n  constructor(public navCtrl: NavController, public viewCtrl: ViewController, formBuilder: FormBuilder, public camera: Camera) {\n    this.form = formBuilder.group({\n      profilePic: [''],\n      name: ['', Validators.required],\n      about: ['']\n    });\n\n    // Watch the form for changes, and\n    this.form.valueChanges.subscribe((v) => {\n      this.isReadyToSave = this.form.valid;\n    });\n  }\n\n  ionViewDidLoad() {\n\n  }\n\n  createAccount() {\n    // this.eos.transaction(tr => {\n    //     tr.newaccount({\n    //       creator: this.acct_creator,\n    //       name: this.acct_name,\n    //       owner: this.pubkey_owner,\n    //       active: this.pubkey_active\n    //     })\n    //     tr.buyrambytes({\n    //       payer: this.acct_creator,\n    //       receiver: this.acct_name,\n    //       bytes: Number(this.ram)\n    //     })\n    //     tr.delegatebw({\n    //       from: this.acct_creator,\n    //       receiver: this.acct_name,\n    //       stake_net_quantity: this.net + ' EOS',\n    //       stake_cpu_quantity: this.cpu + ' EOS',\n    //       transfer: this.transfer ? 1:0\n    //     })\n    //   }).then((data) => {\n    //     console.log(data.transaction_id);\n    //     this.setState({loading:false, error:false, success: data.transaction_id});\n    //   }).catch((e) => {\n    //     let error = JSON.stringify(e);\n    //     this.setState({loading:false, error:true});\n    //\n    //     if(error.includes('name is already taken')) {\n    //       this.setState({reason:'Someone already owns that name.'});\n    //     } else if(error.includes('Missing required accounts')) {\n    //       this.setState({reason:'Incorrect scatter account - please review chain id, network, and account name.'});\n    //     }\n    //   });\n    }\n  /**\n   * The user cancelled, so we dismiss without sending data back.\n   */\n  cancel() {\n    this.viewCtrl.dismiss();\n  }\n\n  /**\n   * The user is done and wants to create the item, so return it\n   * back to the presenter.\n   */\n  done() {\n    if (!this.form.valid) { return; }\n    this.viewCtrl.dismiss(this.form.value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/item-create/item-create.ts"],"sourceRoot":""}